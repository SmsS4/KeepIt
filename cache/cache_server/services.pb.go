// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services.proto

package server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Nil struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nil) Reset()         { *m = Nil{} }
func (m *Nil) String() string { return proto.CompactTextString(m) }
func (*Nil) ProtoMessage()    {}
func (*Nil) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{0}
}

func (m *Nil) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nil.Unmarshal(m, b)
}
func (m *Nil) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nil.Marshal(b, m, deterministic)
}
func (m *Nil) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nil.Merge(m, src)
}
func (m *Nil) XXX_Size() int {
	return xxx_messageInfo_Nil.Size(m)
}
func (m *Nil) XXX_DiscardUnknown() {
	xxx_messageInfo_Nil.DiscardUnknown(m)
}

var xxx_messageInfo_Nil proto.InternalMessageInfo

type Key struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{1}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{2}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type OprationResult struct {
	ActiveIp             string   `protobuf:"bytes,4,opt,name=activeIp,proto3" json:"activeIp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OprationResult) Reset()         { *m = OprationResult{} }
func (m *OprationResult) String() string { return proto.CompactTextString(m) }
func (*OprationResult) ProtoMessage()    {}
func (*OprationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{3}
}

func (m *OprationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OprationResult.Unmarshal(m, b)
}
func (m *OprationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OprationResult.Marshal(b, m, deterministic)
}
func (m *OprationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OprationResult.Merge(m, src)
}
func (m *OprationResult) XXX_Size() int {
	return xxx_messageInfo_OprationResult.Size(m)
}
func (m *OprationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_OprationResult.DiscardUnknown(m)
}

var xxx_messageInfo_OprationResult proto.InternalMessageInfo

func (m *OprationResult) GetActiveIp() string {
	if m != nil {
		return m.ActiveIp
	}
	return ""
}

type Result struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	MissCache            bool     `protobuf:"varint,2,opt,name=missCache,proto3" json:"missCache,omitempty"`
	ActiveIp             string   `protobuf:"bytes,4,opt,name=activeIp,proto3" json:"activeIp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{4}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Result) GetMissCache() bool {
	if m != nil {
		return m.MissCache
	}
	return false
}

func (m *Result) GetActiveIp() string {
	if m != nil {
		return m.ActiveIp
	}
	return ""
}

func init() {
	proto.RegisterType((*Nil)(nil), "server.Nil")
	proto.RegisterType((*Key)(nil), "server.Key")
	proto.RegisterType((*KeyValue)(nil), "server.KeyValue")
	proto.RegisterType((*OprationResult)(nil), "server.OprationResult")
	proto.RegisterType((*Result)(nil), "server.Result")
}

func init() { proto.RegisterFile("services.proto", fileDescriptor_8e16ccb8c5307b32) }

var fileDescriptor_8e16ccb8c5307b32 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4a, 0xc4, 0x30,
	0x18, 0x84, 0xb7, 0xc6, 0x96, 0xee, 0xaf, 0x94, 0xe5, 0x47, 0xb4, 0x14, 0x0f, 0x12, 0x3c, 0x78,
	0x90, 0x82, 0xeb, 0x23, 0xec, 0x41, 0xa4, 0xb0, 0x4a, 0x05, 0xf1, 0x1a, 0xcb, 0x0f, 0x06, 0xa3,
	0x2d, 0x49, 0x5a, 0xc8, 0x93, 0xf8, 0xba, 0xd2, 0xc4, 0xdd, 0xad, 0x88, 0x7b, 0xcb, 0xcc, 0x7c,
	0x4c, 0x32, 0x04, 0x32, 0x43, 0x7a, 0x90, 0x0d, 0x99, 0xb2, 0xd3, 0xad, 0x6d, 0x31, 0x19, 0x35,
	0x69, 0x1e, 0x03, 0x5b, 0x4b, 0xc5, 0xcf, 0x80, 0x55, 0xe4, 0x70, 0x01, 0xec, 0x9d, 0x5c, 0x1e,
	0x5d, 0x44, 0x57, 0xf3, 0x7a, 0x3c, 0xf2, 0x25, 0xa4, 0x15, 0xb9, 0x67, 0xa1, 0x7a, 0xfa, 0x9b,
	0xe2, 0x09, 0xc4, 0xc3, 0x18, 0xe5, 0x07, 0xde, 0x0b, 0x82, 0x5f, 0x43, 0xf6, 0xd0, 0x69, 0x61,
	0x65, 0xfb, 0x59, 0x93, 0xe9, 0x95, 0xc5, 0x02, 0x52, 0xd1, 0x58, 0x39, 0xd0, 0x7d, 0x97, 0x1f,
	0x7a, 0x74, 0xab, 0xf9, 0x0b, 0x24, 0x3f, 0xd4, 0xb6, 0x2d, 0x9a, 0xb4, 0xe1, 0x39, 0xcc, 0x3f,
	0xa4, 0x31, 0x2b, 0xd1, 0xbc, 0x85, 0x7b, 0xd2, 0x7a, 0x67, 0xec, 0x6b, 0x5e, 0x7e, 0x45, 0x70,
	0xec, 0xa9, 0xa7, 0xb0, 0x1d, 0x2f, 0x81, 0xdd, 0x91, 0xc5, 0xa3, 0x32, 0x8c, 0x2f, 0x2b, 0x72,
	0x45, 0xb6, 0x11, 0xe1, 0x11, 0x7c, 0x86, 0x37, 0xc0, 0x1e, 0x7b, 0x8b, 0x8b, 0x09, 0xe5, 0xf7,
	0x17, 0xa7, 0x1b, 0xe7, 0xf7, 0x3a, 0x3e, 0xc3, 0x12, 0xe2, 0x95, 0x22, 0xa1, 0x77, 0xd5, 0x6b,
	0xa9, 0xfe, 0xe7, 0x5f, 0x13, 0xff, 0x09, 0xb7, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x41, 0x90,
	0x5a, 0xc1, 0x96, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CacheServiceClient is the client API for CacheService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CacheServiceClient interface {
	Get(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Result, error)
	Put(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*OprationResult, error)
	Clear(ctx context.Context, in *Nil, opts ...grpc.CallOption) (*OprationResult, error)
}

type cacheServiceClient struct {
	cc *grpc.ClientConn
}

func NewCacheServiceClient(cc *grpc.ClientConn) CacheServiceClient {
	return &cacheServiceClient{cc}
}

func (c *cacheServiceClient) Get(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/server.CacheService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheServiceClient) Put(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*OprationResult, error) {
	out := new(OprationResult)
	err := c.cc.Invoke(ctx, "/server.CacheService/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheServiceClient) Clear(ctx context.Context, in *Nil, opts ...grpc.CallOption) (*OprationResult, error) {
	out := new(OprationResult)
	err := c.cc.Invoke(ctx, "/server.CacheService/Clear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CacheServiceServer is the server API for CacheService service.
type CacheServiceServer interface {
	Get(context.Context, *Key) (*Result, error)
	Put(context.Context, *KeyValue) (*OprationResult, error)
	Clear(context.Context, *Nil) (*OprationResult, error)
}

// UnimplementedCacheServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCacheServiceServer struct {
}

func (*UnimplementedCacheServiceServer) Get(ctx context.Context, req *Key) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedCacheServiceServer) Put(ctx context.Context, req *KeyValue) (*OprationResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}
func (*UnimplementedCacheServiceServer) Clear(ctx context.Context, req *Nil) (*OprationResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Clear not implemented")
}

func RegisterCacheServiceServer(s *grpc.Server, srv CacheServiceServer) {
	s.RegisterService(&_CacheService_serviceDesc, srv)
}

func _CacheService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.CacheService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServiceServer).Get(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _CacheService_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServiceServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.CacheService/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServiceServer).Put(ctx, req.(*KeyValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _CacheService_Clear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Nil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServiceServer).Clear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.CacheService/Clear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServiceServer).Clear(ctx, req.(*Nil))
	}
	return interceptor(ctx, in, info, handler)
}

var _CacheService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.CacheService",
	HandlerType: (*CacheServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _CacheService_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _CacheService_Put_Handler,
		},
		{
			MethodName: "Clear",
			Handler:    _CacheService_Clear_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}
